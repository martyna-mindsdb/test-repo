name: Update Release Notes

on:
  release:
    types:
      - published  # Trigger when a new release is published

jobs:
  get-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch and update release notes of latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract the release tag from the event payload
          TAG_NAME=$(jq -r '.release.tag_name' < "$GITHUB_EVENT_PATH")
          echo "Release tag: $TAG_NAME"

          # Fetch the release data using GitHub API
          RELEASE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME")

          # Extract the release notes (raw body)
          RELEASE_NOTES=$(echo "$RELEASE" | jq -r '.body')

          # Update the release notes (raw body)
          UPDATED_RELEASE_NOTES="${RELEASE_NOTES}\n\nUpdated by GH Action"

          # Output the release notes to the logs
          echo "Original release Notes:\n$RELEASE_NOTES"
          echo "Updated release Notes:\n$UPDATED_RELEASE_NOTES"

      - name: Enhance Release Notes with LLM
        id: enhance_notes
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Prepare the LLM API payload
          payload=$(cat <<EOF
          {
            "model": "gpt-4",
            "messages": [
              {
                "role": "system",
                "content": "You are an assistant tasked with enhancing GitHub release notes. Improve readability and style while retaining all PR links unchanged."
              },
              {
                "role": "user",
                "content": "${{ env.RAW_NOTES }}"
              }
            ]
          }
          EOF
          )

          # Call the OpenAI API
          response=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$payload")

          # Extract enhanced notes from the API response
          enhanced_notes=$(echo "$response" | jq -r '.choices[0].message.content')

          if [ -z "$enhanced_notes" ]; then
            echo "LLM enhancement failed. Exiting."
            exit 1
          fi

          echo "ENHANCED_NOTES=$enhanced_notes" >> $GITHUB_ENV
